<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE hibernate-mapping PUBLIC "-//Hibernate/Hibernate Mapping DTD 3.0//EN" "http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd">
<!-- This file has been generated by Salto-db Generator Ant v1.0.15 / Hibernate pojos and xml mapping files. at Sat Feb 06 09:46:36 EST 2010 -->
<hibernate-mapping>
  <class name="net.aegis.lab.dao.pojo.Auditsummary" table="auditsummary">
    <id name="summaryId">
      <generator class="native"/>
    </id>
    <property column="repositoryId" name="repositoryId"/>
    <many-to-one column="testharnessId" name="testharnessri"/>
    <many-to-one column="resultId" name="caseresult"/>
    <property column="type" name="type"/>
    <property column="typeCode" name="typeCode"/>
    <property column="outcomeIndicator" name="outcomeIndicator"/>
    <property column="userId" name="userId"/>
    <property column="userName" name="userName"/>
    <property column="messageType" name="messageType"/>
    <property column="actionCode" name="actionCode"/>
    <property column="networkAccessPointId" name="networkAccessPointId"/>
    <property column="patientId" name="patientId"/>
    <property column="enterpriseSourceSite" name="enterpriseSourceSite"/>
    <property column="enterpriseSourceId" name="enterpriseSourceId"/>
    <property column="executeTime" name="executeTime"/>
    <property column="createtime" name="createtime"/>
    <property column="createuser" name="createuser"/>
    <property column="changedtime" name="changedtime"/>
    <property column="changeduser" name="changeduser"/>
  </class>
  <query name="Auditsummary.findByUserId">
        from Auditsummary a where a.userId = :userId
    </query>
  <query name="Auditsummary.findByPatientId">
        from Auditsummary a where a.patientId = :patientId
    </query>
  <query name="Auditsummary.findByRepositoryId">
        from Auditsummary a where a.repositoryId = :repositoryId
    </query>
  <query name="Auditsummary.findByMaxRepositoryId">
        from Auditsummary a where a.repositoryId = (select max(aa.repositoryId) from Auditsummary aa where aa.testharnessri.testharnessId = :testharnessId)
    </query>
  <query name="Auditsummary.findByDistinctResultId">
        select distinct a.caseresult from Auditsummary a
    </query>
  <query name="Auditsummary.findAll">
        from Auditsummary a
    </query>
  <query name="Auditsummary.findByResultId">
        select distinct a.caseresult from Auditsummary a where a.caseresult.resultId = :resultId
    </query>
  <query name="Auditsummary.findByExecuteTimeRange">
        from Auditsummary a where a.executeTime between :startTime and :endTime
    </query>
</hibernate-mapping>
