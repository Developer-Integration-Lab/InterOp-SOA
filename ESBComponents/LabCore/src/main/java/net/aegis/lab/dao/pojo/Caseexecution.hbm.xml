<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE hibernate-mapping PUBLIC "-//Hibernate/Hibernate Mapping DTD 3.0//EN" "http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd">
<!-- This file has been generated by Salto-db Generator Ant v1.0.15 / Hibernate pojos and xml mapping files. at Sat Feb 06 09:46:36 EST 2010 -->
<hibernate-mapping>
  <class name="net.aegis.lab.dao.pojo.Caseexecution" table="caseexecution">
    <id name="caseExecutionId">
      <generator class="native"/>
    </id>
    <many-to-one column="scenarioExecutionId" name="scenarioexecution"/>
    <many-to-one column="caseId" name="testcase"/>
    <property column="userName" name="userName"/>
    <property column="patientId" name="patientId"/>
    <property column="participantpatientId" name="participantpatientId"/>
    <property column="documentIds" name="documentIds"/>
    <property column="participatingRIs" name="participatingRIs"/>
    <property column="successCriteria" name="successCriteria"/>
    <property column="pdSuccessCriteria" name="pdSuccessCriteria"/>
    <property column="pdSuccessCriteriaDesc" name="pdSuccessCriteriaDesc"/>
    <property column="status" name="status"/>
    <property column="version" name="version"/>
    <property column="beginTime" name="beginTime"/>
    <property column="messageType" name="messageType"/>
    <property column="dependentScenarioId" name="dependentScenarioId"/>
    <property column="dependentCaseId" name="dependentCaseId"/>
    <property column="displayByDependentCaseStatus" name="displayByDependentCaseStatus"/> 
    <property column="startTimer" name="startTimer"/>
    <property column="endTimer" name="endTimer"/>
    <property column="resouceIdSendInd" name="resouceIdSendInd"/>
    <bag inverse="true" name="caseresults">
      <key column="caseExecutionId"/>
      <one-to-many class="net.aegis.lab.dao.pojo.Caseresult"/>
    </bag>
    <bag inverse="true" name="caseschedules">
      <key column="caseExecutionId"/>
      <one-to-many class="net.aegis.lab.dao.pojo.Caseschedule"/>
    </bag>
  </class>
  <query name="Caseexecution.findByScenarioExecutionId">
         from Caseexecution a where a.scenarioexecution.scenarioExecutionId = :scenarioExecutionId
    </query>
  <query name="Caseexecution.findByParticipantForActive">
        select ce.caseExecutionId, ce.scenarioexecution.scenarioExecutionId, se.scenario.scenarioId, ce.testcase.caseId, ce.userName,
        ce.patientId, ce.participantpatientId, ce.documentIds, ce.participatingRIs, ce.successCriteria, ce.status, ce.beginTime, ce.messageType,
        ce.dependentScenarioId, ce.dependentCaseId , ce.testcase.name
          from Caseexecution ce, Scenarioexecution se
         where se.scenarioExecutionId = ce.scenarioexecution.scenarioExecutionId
           and se.participant.participantId = :participantId
           and se.status = 'ACTIVE'
    </query>
  <query name="Caseexecution.findByMaxStartTimer">
        select max(startTimer) from Caseexecution ce
    </query>
    <!--<query name="Caseexecution.findByDocIdAndHCIDAndMaxResultId">    	
		 select ce.patientId from resultdocument rd join caseresult cr on rd.resultId = cr.resultId 
		join caseexecution ce on cr.caseExecutionId = ce.caseExecutionId join scenarioexecution se 
		on ce.scenarioExecutionId = se.scenarioExecutionId 
		join servicesetexecution sse on se.executionUniqueId like concat (sse.executionUniqueId  , '%')
		where sse.status='ACTIVE' and rd.documentuniqueid  like concat ('%',:documentuniqueid )
		and rd.communityId like concat ('%',:rd.communityId)  and sse.participantid = :participantid 
		
		select ce.patientId from Resultdocument rd , Caseresult cr , Caseexecution ce , Scenarioexecution se 
		Servicesetexecution sse  
		where rd.caseresult.resultId = cr.resultId  and cr.caseexecution.caseExecutionId = ce.caseExecutionId 
		and ce.scenarioexecution.scenarioExecutionId = se.scenarioExecutionId
		and	sse.status='ACTIVE' and rd.documentUniqueId  like :documentUniqueId 
		and rd.communityId like :communityId  and sse.participant.participantId = :participantId 
		
    </query>-->
    
     <query name="Caseexecution.findByParticipantIdAndCommIdAndDocUniqueId"> 
     	select  ce.caseExecutionId, ce.participantpatientId , max(cr.resultId)  from Resultdocument rd , Caseresult cr , Caseexecution ce , Scenarioexecution se ,
		Servicesetexecution sse  
		where rd.caseresult.resultId = cr.resultId  and cr.caseexecution.caseExecutionId = ce.caseExecutionId 
		and ce.scenarioexecution.scenarioExecutionId = se.scenarioExecutionId
		and se.executionUniqueId like concat(sse.executionUniqueId  , '%')
		and	sse.status='ACTIVE' and  sse.participant.participantId = :participantId 
		and rd.communityId like :communityId and  rd.documentUniqueId  like :documentUniqueId
     </query>
</hibernate-mapping>
